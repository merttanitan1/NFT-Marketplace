{
    "contractName": "NFTMarketplace",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "ERC721IncorrectOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ERC721InsufficientApproval",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "approver",
                    "type": "address"
                }
            ],
            "name": "ERC721InvalidApprover",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "ERC721InvalidOperator",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "ERC721InvalidOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                }
            ],
            "name": "ERC721InvalidReceiver",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "ERC721InvalidSender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ERC721NonexistentToken",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "OwnableInvalidOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "OwnableUnauthorizedAccount",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "approved",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_fromTokenId",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_toTokenId",
                    "type": "uint256"
                }
            ],
            "name": "BatchMetadataUpdate",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "MetadataUpdate",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "buyNFT",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "tokenURI",
                    "type": "string"
                }
            ],
            "name": "createNFT",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "price",
                    "type": "uint256"
                }
            ],
            "name": "listNFT",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "tokenCounter",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "tokenPrices",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "tokensForSale",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"createNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokensForSale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/contracts/NFTMarketplace.sol\":\"NFTMarketplace\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/contracts/NFTMarketplace.sol\":{\"keccak256\":\"0x1434b5120fbc7b4187a011edcbc9ab04d3d3ec22e5f4686e3907c3f8be843d7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed631970646d1f003a22532aad1d2d30ed93cf2090a03ce247e9818c1f8ec704\",\"dweb:/ipfs/QmVdKmAhSzPerfsc7nqFoCiBHzWRkEP1PxCRcPMdX51iVU\"]},\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"c:/Users/mertt/OneDrive/Masa\\u00fcst\\u00fc/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
    "bytecode": "608060405234801562000010575f80fd5b50336040518060400160405280600e81526020016d4e46544d61726b6574706c61636560901b815250604051806040016040528060048152602001634e46544d60e01b815250815f9081620000669190620001ad565b506001620000758282620001ad565b5050506001600160a01b038116620000a657604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b620000b181620000bc565b505f60085562000275565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200013657607f821691505b6020821081036200015557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620001a8575f81815260208120601f850160051c81016020861015620001835750805b601f850160051c820191505b81811015620001a4578281556001016200018f565b5050505b505050565b81516001600160401b03811115620001c957620001c96200010d565b620001e181620001da845462000121565b846200015b565b602080601f83116001811462000217575f8415620001ff5750858301515b5f19600386901b1c1916600185901b178555620001a4565b5f85815260208120601f198616915b82811015620002475788860151825594840194600190910190840162000226565b50858210156200026557878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b61180080620002835f395ff3fe608060405260043610610131575f3560e01c80638da5cb5b116100a8578063c87b56dd1161006d578063c87b56dd1461034f578063d082e3811461036e578063da2ed03e14610383578063e5afe3e6146103a2578063e985e9c5146103cd578063f2fde38b146103ec575f80fd5b80638da5cb5b146102c157806394383f14146102de57806395d89b41146102fd578063a22cb46514610311578063b88d4fde14610330575f80fd5b806342842e0e116100f957806342842e0e1461020157806351ed8288146102205780636352211e1461023357806370a0823114610252578063715018a61461027f57806387b3746814610293575f80fd5b806301ffc9a71461013557806306fdde0314610169578063081812fc1461018a578063095ea7b3146101c157806323b872dd146101e2575b5f80fd5b348015610140575f80fd5b5061015461014f3660046112ed565b61040b565b60405190151581526020015b60405180910390f35b348015610174575f80fd5b5061017d610435565b6040516101609190611355565b348015610195575f80fd5b506101a96101a4366004611367565b6104c4565b6040516001600160a01b039091168152602001610160565b3480156101cc575f80fd5b506101e06101db366004611399565b6104eb565b005b3480156101ed575f80fd5b506101e06101fc3660046113c1565b6104fa565b34801561020c575f80fd5b506101e061021b3660046113c1565b610588565b6101e061022e366004611367565b6105a7565b34801561023e575f80fd5b506101a961024d366004611367565b6106d1565b34801561025d575f80fd5b5061027161026c3660046113fa565b6106db565b604051908152602001610160565b34801561028a575f80fd5b506101e0610720565b34801561029e575f80fd5b506101546102ad366004611367565b600a6020525f908152604090205460ff1681565b3480156102cc575f80fd5b506007546001600160a01b03166101a9565b3480156102e9575f80fd5b506101e06102f8366004611413565b610733565b348015610308575f80fd5b5061017d610809565b34801561031c575f80fd5b506101e061032b366004611433565b610818565b34801561033b575f80fd5b506101e061034a3660046114f3565b610823565b34801561035a575f80fd5b5061017d610369366004611367565b61083a565b348015610379575f80fd5b5061027160085481565b34801561038e575f80fd5b5061027161039d36600461156a565b610945565b3480156103ad575f80fd5b506102716103bc366004611367565b60096020525f908152604090205481565b3480156103d8575f80fd5b506101546103e73660046115af565b610979565b3480156103f7575f80fd5b506101e06104063660046113fa565b6109a6565b5f6001600160e01b03198216632483248360e11b148061042f575061042f826109e3565b92915050565b60605f8054610443906115e0565b80601f016020809104026020016040519081016040528092919081815260200182805461046f906115e0565b80156104ba5780601f10610491576101008083540402835291602001916104ba565b820191905f5260205f20905b81548152906001019060200180831161049d57829003601f168201915b5050505050905090565b5f6104ce82610a32565b505f828152600460205260409020546001600160a01b031661042f565b6104f6828233610a6a565b5050565b6001600160a01b03821661052857604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f610534838333610a77565b9050836001600160a01b0316816001600160a01b031614610582576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161051f565b50505050565b6105a283838360405180602001604052805f815250610823565b505050565b5f818152600a602052604090205460ff166106045760405162461bcd60e51b815260206004820152601960248201527f54686973204e4654206973206e6f7420666f722073616c652e00000000000000604482015260640161051f565b5f8181526009602052604090205434101561066f5760405162461bcd60e51b815260206004820152602560248201527f4e6f7420656e6f75676820657468657220746f207075726368617365207468696044820152641cc813919560da1b606482015260840161051f565b5f610679826106d1565b9050610686813384610b69565b6040516001600160a01b038216903480156108fc02915f818181858888f193505050501580156106b8573d5f803e3d5ffd5b50505f908152600a60205260409020805460ff19169055565b5f61042f82610a32565b5f6001600160a01b038216610705576040516322718ad960e21b81525f600482015260240161051f565b506001600160a01b03165f9081526003602052604090205490565b610728610c16565b6107315f610c43565b565b3361073d836106d1565b6001600160a01b0316146107935760405162461bcd60e51b815260206004820152601e60248201527f596f7520617265206e6f74206f776e6572206f662074686973204e46542e0000604482015260640161051f565b5f81116107e25760405162461bcd60e51b815260206004820152601f60248201527f5072696365206d7573742062652067726561746572207468616e207a65726f00604482015260640161051f565b5f91825260096020908152604080842092909255600a90529020805460ff19166001179055565b606060018054610443906115e0565b6104f6338383610c94565b61082e8484846104fa565b61058284848484610d32565b606061084582610a32565b505f828152600660205260408120805461085e906115e0565b80601f016020809104026020016040519081016040528092919081815260200182805461088a906115e0565b80156108d55780601f106108ac576101008083540402835291602001916108d5565b820191905f5260205f20905b8154815290600101906020018083116108b857829003601f168201915b505050505090505f6108f160408051602081019091525f815290565b905080515f03610902575092915050565b81511561093457808260405160200161091c929190611618565b60405160208183030381529060405292505050919050565b61093d84610e58565b949350505050565b6008545f906109543382610ec9565b61095e8184610ee2565b60088054905f61096d83611646565b90915550909392505050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b6109ae610c16565b6001600160a01b0381166109d757604051631e4fbdf760e01b81525f600482015260240161051f565b6109e081610c43565b50565b5f6001600160e01b031982166380ac58cd60e01b1480610a1357506001600160e01b03198216635b5e139f60e01b145b8061042f57506301ffc9a760e01b6001600160e01b031983161461042f565b5f818152600260205260408120546001600160a01b03168061042f57604051637e27328960e01b81526004810184905260240161051f565b6105a28383836001610f31565b5f828152600260205260408120546001600160a01b0390811690831615610aa357610aa3818486611035565b6001600160a01b03811615610add57610abe5f855f80610f31565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b03851615610b0b576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6001600160a01b038216610b9257604051633250574960e11b81525f600482015260240161051f565b5f610b9e83835f610a77565b90506001600160a01b038116610bca57604051637e27328960e01b81526004810183905260240161051f565b836001600160a01b0316816001600160a01b031614610582576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161051f565b6007546001600160a01b031633146107315760405163118cdaa760e01b815233600482015260240161051f565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216610cc657604051630b61174360e31b81526001600160a01b038316600482015260240161051f565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561058257604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610d7490339088908790879060040161166a565b6020604051808303815f875af1925050508015610dae575060408051601f3d908101601f19168201909252610dab918101906116a6565b60015b610e15573d808015610ddb576040519150601f19603f3d011682016040523d82523d5f602084013e610de0565b606091505b5080515f03610e0d57604051633250574960e11b81526001600160a01b038516600482015260240161051f565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610e5157604051633250574960e11b81526001600160a01b038516600482015260240161051f565b5050505050565b6060610e6382610a32565b505f610e7960408051602081019091525f815290565b90505f815111610e975760405180602001604052805f815250610ec2565b80610ea184611099565b604051602001610eb2929190611618565b6040516020818303038152906040525b9392505050565b6104f6828260405180602001604052805f815250611129565b5f828152600660205260409020610ef9828261170e565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b8080610f4557506001600160a01b03821615155b15611006575f610f5484610a32565b90506001600160a01b03831615801590610f805750826001600160a01b0316816001600160a01b031614155b8015610f935750610f918184610979565b155b15610fbc5760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161051f565b81156110045783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b61104083838361113f565b6105a2576001600160a01b03831661106e57604051637e27328960e01b81526004810182905260240161051f565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161051f565b60605f6110a5836111a0565b60010190505f8167ffffffffffffffff8111156110c4576110c461146c565b6040519080825280601f01601f1916602001820160405280156110ee576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846110f857509392505050565b6111338383611277565b6105a25f848484610d32565b5f6001600160a01b0383161580159061093d5750826001600160a01b0316846001600160a01b0316148061117857506111788484610979565b8061093d5750505f908152600460205260409020546001600160a01b03908116911614919050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106111de5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061120a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061122857662386f26fc10000830492506010015b6305f5e1008310611240576305f5e100830492506008015b612710831061125457612710830492506004015b60648310611266576064830492506002015b600a831061042f5760010192915050565b6001600160a01b0382166112a057604051633250574960e11b81525f600482015260240161051f565b5f6112ac83835f610a77565b90506001600160a01b038116156105a2576040516339e3563760e11b81525f600482015260240161051f565b6001600160e01b0319811681146109e0575f80fd5b5f602082840312156112fd575f80fd5b8135610ec2816112d8565b5f5b8381101561132257818101518382015260200161130a565b50505f910152565b5f8151808452611341816020860160208601611308565b601f01601f19169290920160200192915050565b602081525f610ec2602083018461132a565b5f60208284031215611377575f80fd5b5035919050565b80356001600160a01b0381168114611394575f80fd5b919050565b5f80604083850312156113aa575f80fd5b6113b38361137e565b946020939093013593505050565b5f805f606084860312156113d3575f80fd5b6113dc8461137e565b92506113ea6020850161137e565b9150604084013590509250925092565b5f6020828403121561140a575f80fd5b610ec28261137e565b5f8060408385031215611424575f80fd5b50508035926020909101359150565b5f8060408385031215611444575f80fd5b61144d8361137e565b915060208301358015158114611461575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f67ffffffffffffffff8084111561149a5761149a61146c565b604051601f8501601f19908116603f011681019082821181831017156114c2576114c261146c565b816040528093508581528686860111156114da575f80fd5b858560208301375f602087830101525050509392505050565b5f805f8060808587031215611506575f80fd5b61150f8561137e565b935061151d6020860161137e565b925060408501359150606085013567ffffffffffffffff81111561153f575f80fd5b8501601f8101871361154f575f80fd5b61155e87823560208401611480565b91505092959194509250565b5f6020828403121561157a575f80fd5b813567ffffffffffffffff811115611590575f80fd5b8201601f810184136115a0575f80fd5b61093d84823560208401611480565b5f80604083850312156115c0575f80fd5b6115c98361137e565b91506115d76020840161137e565b90509250929050565b600181811c908216806115f457607f821691505b60208210810361161257634e487b7160e01b5f52602260045260245ffd5b50919050565b5f8351611629818460208801611308565b83519083019061163d818360208801611308565b01949350505050565b5f6001820161166357634e487b7160e01b5f52601160045260245ffd5b5060010190565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061169c9083018461132a565b9695505050505050565b5f602082840312156116b6575f80fd5b8151610ec2816112d8565b601f8211156105a2575f81815260208120601f850160051c810160208610156116e75750805b601f850160051c820191505b81811015611706578281556001016116f3565b505050505050565b815167ffffffffffffffff8111156117285761172861146c565b61173c8161173684546115e0565b846116c1565b602080601f83116001811461176f575f84156117585750858301515b5f19600386901b1c1916600185901b178555611706565b5f85815260208120601f198616915b8281101561179d5788860151825594840194600190910190840161177e565b50858210156117ba57878501515f19600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220b391b1a97abd1bfc74ba6d45d2e652407a62c1a517eea985a09abc1bbb1709d764736f6c63430008140033",
    "deployedBytecode": "",
    "sourceMap": "304:1276:0:-:0;;;517:82;;;;;;;;;;357:10;1381:113:6;;;;;;;;;;;;;-1:-1:-1;;;1381:113:6;;;;;;;;;;;;;;;;-1:-1:-1;;;1381:113:6;;;1455:5;1447;:13;;;;;;:::i;:::-;-1:-1:-1;1470:7:6;:17;1480:7;1470;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:1;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:1;;1350:1;1322:31;;;2881:51:17;2854:18;;1322:31:1;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;590:1:0::1;575:12;:16:::0;304:1276;;2912:187:1;3004:6;;;-1:-1:-1;;;;;3020:17:1;;;-1:-1:-1;;;;;;3020:17:1;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:17:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:17;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:17;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:17;;;2580:26;2531:89;-1:-1:-1;;1335:1:17;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:17;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:17;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:17;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:17:o;2735:203::-;304:1276:0;;;;;;",
    "deployedSourceMap": "304:1276:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;937:207:9;;;;;;;;;;-1:-1:-1;937:207:9;;;;;:::i;:::-;;:::i;:::-;;;565:14:17;;558:22;540:41;;528:2;513:18;937:207:9;;;;;;;;2365:89:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3497:154::-;;;;;;;;;;-1:-1:-1;3497:154:6;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:17;;;1679:51;;1667:2;1652:18;3497:154:6;1533:203:17;3323:113:6;;;;;;;;;;-1:-1:-1;3323:113:6;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;-1:-1:-1;4143:578:6;;;;;:::i;:::-;;:::i;4787:132::-;;;;;;;;;;-1:-1:-1;4787:132:6;;;;;:::i;:::-;;:::i;1173:404:0:-;;;;;;:::i;:::-;;:::i;2185:118:6:-;;;;;;;;;;-1:-1:-1;2185:118:6;;;;;:::i;:::-;;:::i;1920:208::-;;;;;;;;;;-1:-1:-1;1920:208:6;;;;;:::i;:::-;;:::i;:::-;;;2848:25:17;;;2836:2;2821:18;1920:208:6;2702:177:17;2293:101:1;;;;;;;;;;;;;:::i;463:45:0:-;;;;;;;;;;-1:-1:-1;463:45:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;1638:85:1;;;;;;;;;;-1:-1:-1;1710:6:1;;-1:-1:-1;;;;;1710:6:1;1638:85;;875:290:0;;;;;;;;;;-1:-1:-1;875:290:0;;;;;:::i;:::-;;:::i;2518:93:6:-;;;;;;;;;;;;;:::i;3718:144::-;;;;;;;;;;-1:-1:-1;3718:144:6;;;;;:::i;:::-;;:::i;4985:208::-;;;;;;;;;;-1:-1:-1;4985:208:6;;;;;:::i;:::-;;:::i;1210:593:9:-;;;;;;;;;;-1:-1:-1;1210:593:9;;;;;:::i;:::-;;:::i;376:27:0:-;;;;;;;;;;;;;;;;607:260;;;;;;;;;;-1:-1:-1;607:260:0;;;;;:::i;:::-;;:::i;410:46::-;;;;;;;;;;-1:-1:-1;410:46:0;;;;;:::i;:::-;;;;;;;;;;;;;;3928:153:6;;;;;;;;;;-1:-1:-1;3928:153:6;;;;;:::i;:::-;;:::i;2543:215:1:-;;;;;;;;;;-1:-1:-1;2543:215:1;;;;;:::i;:::-;;:::i;937:207:9:-;1039:4;-1:-1:-1;;;;;;1062:35:9;;-1:-1:-1;;;1062:35:9;;:75;;;1101:36;1125:11;1101:23;:36::i;:::-;1055:82;937:207;-1:-1:-1;;937:207:9:o;2365:89:6:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;-1:-1:-1;6008:7:6;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:6;3623:21;5938:127;3323:113;3394:35;3403:2;3407:7;735:10:11;3394:8:6;:35::i;:::-;3323:113;;:::o;4143:578::-;-1:-1:-1;;;;;4237:16:6;;4233:87;;4276:33;;-1:-1:-1;;;4276:33:6;;4306:1;4276:33;;;1679:51:17;1652:18;;4276:33:6;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;735:10:11;4562:7:6;:34::i;:::-;4538:58;;4627:4;-1:-1:-1;;;;;4610:21:6;:13;-1:-1:-1;;;;;4610:21:6;;4606:109;;4654:50;;-1:-1:-1;;;4654:50:6;;-1:-1:-1;;;;;6291:15:17;;;4654:50:6;;;6273:34:17;6323:18;;;6316:34;;;6386:15;;6366:18;;;6359:43;6208:18;;4654:50:6;6033:375:17;4606:109:6;4223:498;4143:578;;;:::o;4787:132::-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;1173:404:0:-;1239:22;;;;:13;:22;;;;;;;;1231:60;;;;-1:-1:-1;;;1231:60:0;;6615:2:17;1231:60:0;;;6597:21:17;6654:2;6634:18;;;6627:30;6693:27;6673:18;;;6666:55;6738:18;;1231:60:0;6413:349:17;1231:60:0;1323:20;;;;:11;:20;;;;;;1310:9;:33;;1302:83;;;;-1:-1:-1;;;1302:83:0;;6969:2:17;1302:83:0;;;6951:21:17;7008:2;6988:18;;;6981:30;7047:34;7027:18;;;7020:62;-1:-1:-1;;;7098:18:17;;;7091:35;7143:19;;1302:83:0;6767:401:17;1302:83:0;1396:14;1413:16;1421:7;1413;:16::i;:::-;1396:33;;1440:38;1450:6;1458:10;1470:7;1440:9;:38::i;:::-;1491:35;;-1:-1:-1;;;;;1491:24:0;;;1516:9;1491:35;;;;;;;;;1516:9;1491:24;:35;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1564:5:0;1539:22;;;:13;:22;;;;;:30;;-1:-1:-1;;1539:30:0;;;1173:404::o;2185:118:6:-;2248:7;2274:22;2288:7;2274:13;:22::i;1920:208::-;1983:7;-1:-1:-1;;;;;2006:19:6;;2002:87;;2048:30;;-1:-1:-1;;;2048:30:6;;2075:1;2048:30;;;1679:51:17;1652:18;;2048:30:6;1533:203:17;2002:87:6;-1:-1:-1;;;;;;2105:16:6;;;;;:9;:16;;;;;;;1920:208::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;875:290:0:-;969:10;949:16;957:7;949;:16::i;:::-;-1:-1:-1;;;;;949:30:0;;941:73;;;;-1:-1:-1;;;941:73:0;;7375:2:17;941:73:0;;;7357:21:17;7414:2;7394:18;;;7387:30;7453:32;7433:18;;;7426:60;7503:18;;941:73:0;7173:354:17;941:73:0;1041:1;1033:5;:9;1025:53;;;;-1:-1:-1;;;1025:53:0;;7734:2:17;1025:53:0;;;7716:21:17;7773:2;7753:18;;;7746:30;7812:33;7792:18;;;7785:61;7863:18;;1025:53:0;7532:355:17;1025:53:0;1089:20;;;;:11;:20;;;;;;;;:28;;;;1128:13;:22;;;;:29;;-1:-1:-1;;1128:29:0;1153:4;1128:29;;;875:290::o;2518:93:6:-;2565:13;2597:7;2590:14;;;;;:::i;3718:144::-;3803:52;735:10:11;3836:8:6;3846;3803:18;:52::i;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;1210:593:9:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;-1:-1:-1;1341:23:9;1367:19;;;:10;:19;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;3250:9:6;;;;;;;;;-1:-1:-1;3250:9:6;;;3174:92;1417:10:9;1396:31;;1506:4;1500:18;1522:1;1500:23;1496:70;;-1:-1:-1;1546:9:9;1210:593;-1:-1:-1;;1210:593:9:o;1496:70::-;1665:23;;:27;1661:95;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;1210:593;;;:::o;1661:95::-;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;1210:593;-1:-1:-1;;;;1210:593:9:o;607:260:0:-;705:12;;665:7;;728:33;738:10;705:12;728:9;:33::i;:::-;772:34;785:10;797:8;772:12;:34::i;:::-;817:12;:14;;;:12;:14;;;:::i;:::-;;;;-1:-1:-1;849:10:0;;607:260;-1:-1:-1;;;607:260:0:o;3928:153:6:-;-1:-1:-1;;;;;4039:25:6;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3928:153::o;2543:215:1:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:1;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:1;;2700:1:::1;2672:31;::::0;::::1;1679:51:17::0;1652:18;;2672:31:1::1;1533:203:17::0;2623:91:1::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1561:300:6:-;1663:4;-1:-1:-1;;;;;;1698:40:6;;-1:-1:-1;;;1698:40:6;;:104;;-1:-1:-1;;;;;;;1754:48:6;;-1:-1:-1;;;1754:48:6;1698:104;:156;;;-1:-1:-1;;;;;;;;;;861:40:13;;;1818:36:6;762:146:13;16138:241:6;16201:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:6;;16263:88;;16309:31;;-1:-1:-1;;;16309:31:6;;;;;2848:25:17;;;2821:18;;16309:31:6;2702:177:17;14418:120:6;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;8838:795::-;8924:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:6;;;;9035:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;-1:-1:-1;;;;;9161:18:6;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;-1:-1:-1;;;;;9368:15:6;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9368:20:6;;;9157:256;-1:-1:-1;;;;;9427:16:6;;;9423:107;;-1:-1:-1;;;;;9487:13:6;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9540:21:6;-1:-1:-1;;;;;9540:21:6;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:6:o;12013:460::-;-1:-1:-1;;;;;12098:16:6;;12094:87;;12137:33;;-1:-1:-1;;;12137:33:6;;12167:1;12137:33;;;1679:51:17;1652:18;;12137:33:6;1533:203:17;12094:87:6;12190:21;12214:32;12222:2;12226:7;12243:1;12214:7;:32::i;:::-;12190:56;-1:-1:-1;;;;;;12260:27:6;;12256:211;;12310:31;;-1:-1:-1;;;12310:31:6;;;;;2848:25:17;;;2821:18;;12310:31:6;2702:177:17;12256:211:6;12379:4;-1:-1:-1;;;;;12362:21:6;:13;-1:-1:-1;;;;;12362:21:6;;12358:109;;12406:50;;-1:-1:-1;;;12406:50:6;;-1:-1:-1;;;;;6291:15:17;;;12406:50:6;;;6273:34:17;6323:18;;;6316:34;;;6386:15;;6366:18;;;6359:43;6208:18;;12406:50:6;6033:375:17;1796:162:1;1710:6;;-1:-1:-1;;;;;1710:6:1;735:10:11;1855:23:1;1851:101;;1901:40;;-1:-1:-1;;;1901:40:1;;735:10:11;1901:40:1;;;1679:51:17;1652:18;;1901:40:1;1533:203:17;2912:187:1;3004:6;;;-1:-1:-1;;;;;3020:17:1;;;-1:-1:-1;;;;;;3020:17:1;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;15591:312:6:-;-1:-1:-1;;;;;15698:22:6;;15694:91;;15743:31;;-1:-1:-1;;;15743:31:6;;-1:-1:-1;;;;;1697:32:17;;15743:31:6;;;1679:51:17;1652:18;;15743:31:6;1533:203:17;15694:91:6;-1:-1:-1;;;;;15794:25:6;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15794:46:6;;;;;;;;;;15855:41;;540::17;;;15855::6;;513:18:17;15855:41:6;;;;;;;15591:312;;;:::o;16918:782::-;-1:-1:-1;;;;;17034:14:6;;;:18;17030:664;;17072:71;;-1:-1:-1;;;17072:71:6;;-1:-1:-1;;;;;17072:36:6;;;;;:71;;735:10:11;;17123:4:6;;17129:7;;17138:4;;17072:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17072:71:6;;;;;;;;-1:-1:-1;;17072:71:6;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;:13;17398:1;17381:18;17377:293;;17430:25;;-1:-1:-1;;;17430:25:6;;-1:-1:-1;;;;;1697:32:17;;17430:25:6;;;1679:51:17;1652:18;;17430:25:6;1533:203:17;17377:293:6;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;-1:-1:-1;;;;;;17190:51:6;;-1:-1:-1;;;17190:51:6;17186:130;;17272:25;;-1:-1:-1;;;17272:25:6;;-1:-1:-1;;;;;1697:32:17;;17272:25:6;;;1679:51:17;1652:18;;17272:25:6;1533:203:17;17186:130:6;17144:186;16918:782;;;;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;3250:9;;;;;;;;;-1:-1:-1;3250:9:6;;;3174:92;2823:10;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;2677:255;-1:-1:-1;;;2677:255:6:o;10633:100::-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;1922:167:9:-;2013:19;;;;:10;:19;;;;;:31;2035:9;2013:19;:31;:::i;:::-;-1:-1:-1;2059:23:9;;2848:25:17;;;2059:23:9;;2836:2:17;2821:18;2059:23:9;;;;;;;1922:167;;:::o;14720:662:6:-;14880:9;:31;;;-1:-1:-1;;;;;;14893:18:6;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;-1:-1:-1;;;;;;15093:18:6;;;;;;:35;;;15124:4;-1:-1:-1;;;;;15115:13:6;:5;-1:-1:-1;;;;;15115:13:6;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15189:27;;-1:-1:-1;;;15189:27:6;;-1:-1:-1;;;;;1697:32:17;;15189:27:6;;;1679:51:17;1652:18;;15189:27:6;1533:203:17;15089:142:6;15249:9;15245:81;;;15303:7;15299:2;-1:-1:-1;;;;;15283:28:6;15292:5;-1:-1:-1;;;;;15283:28:6;;;;;;;;;;;15245:81;14913:423;14876:460;-1:-1:-1;;15346:24:6;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15346:29:6;-1:-1:-1;;;;;15346:29:6;;;;;;;;;;14720:662::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;-1:-1:-1;;;;;7252:19:6;;7248:186;;7298:31;;-1:-1:-1;;;7298:31:6;;;;;2848:25:17;;;2821:18;;7298:31:6;2702:177:17;7248:186:6;7375:44;;-1:-1:-1;;;7375:44:6;;-1:-1:-1;;;;;11774:32:17;;7375:44:6;;;11756:51:17;11823:18;;;11816:34;;;11729:18;;7375:44:6;11582:274:17;637:698:12;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:12;-1:-1:-1;794:41:12;-1:-1:-1;955:28:12;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:12;-1:-1:-1;;;1175:2:12;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:12;1010:282;1256:21;-1:-1:-1;1312:6:12;637:698;-1:-1:-1;;;637:698:12:o;10954:182:6:-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;6376:272::-;6479:4;-1:-1:-1;;;;;6514:21:6;;;;;;:127;;;6561:7;-1:-1:-1;;;;;6552:16:6;:5;-1:-1:-1;;;;;6552:16:6;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:88;;;-1:-1:-1;;6008:7:6;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:6;;;6608:32;;;;6495:146;-1:-1:-1;6376:272:6:o;12214:916:15:-;12267:7;;-1:-1:-1;;;12342:17:15;;12338:103;;-1:-1:-1;;;12379:17:15;;;-1:-1:-1;12424:2:15;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:15;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:15;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:15;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:15;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:15;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:15:o;9955:327:6:-;-1:-1:-1;;;;;10022:16:6;;10018:87;;10061:33;;-1:-1:-1;;;10061:33:6;;10091:1;10061:33;;;1679:51:17;1652:18;;10061:33:6;1533:203:17;10018:87:6;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;-1:-1:-1;;;;;;10184:27:6;;;10180:96;;10234:31;;-1:-1:-1;;;10234:31:6;;10262:1;10234:31;;;1679:51:17;1652:18;;10234:31:6;1533:203:17;14:131;-1:-1:-1;;;;;;88:32:17;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:17;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:17;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:17:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:17;;1348:180;-1:-1:-1;1348:180:17:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:17;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:17:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:248::-;2952:6;2960;3013:2;3001:9;2992:7;2988:23;2984:32;2981:52;;;3029:1;3026;3019:12;2981:52;-1:-1:-1;;3052:23:17;;;3122:2;3107:18;;;3094:32;;-1:-1:-1;2884:248:17:o;3137:347::-;3202:6;3210;3263:2;3251:9;3242:7;3238:23;3234:32;3231:52;;;3279:1;3276;3269:12;3231:52;3302:29;3321:9;3302:29;:::i;:::-;3292:39;;3381:2;3370:9;3366:18;3353:32;3428:5;3421:13;3414:21;3407:5;3404:32;3394:60;;3450:1;3447;3440:12;3394:60;3473:5;3463:15;;;3137:347;;;;;:::o;3489:127::-;3550:10;3545:3;3541:20;3538:1;3531:31;3581:4;3578:1;3571:15;3605:4;3602:1;3595:15;3621:631;3685:5;3715:18;3756:2;3748:6;3745:14;3742:40;;;3762:18;;:::i;:::-;3837:2;3831:9;3805:2;3891:15;;-1:-1:-1;;3887:24:17;;;3913:2;3883:33;3879:42;3867:55;;;3937:18;;;3957:22;;;3934:46;3931:72;;;3983:18;;:::i;:::-;4023:10;4019:2;4012:22;4052:6;4043:15;;4082:6;4074;4067:22;4122:3;4113:6;4108:3;4104:16;4101:25;4098:45;;;4139:1;4136;4129:12;4098:45;4189:6;4184:3;4177:4;4169:6;4165:17;4152:44;4244:1;4237:4;4228:6;4220;4216:19;4212:30;4205:41;;;;3621:631;;;;;:::o;4257:666::-;4352:6;4360;4368;4376;4429:3;4417:9;4408:7;4404:23;4400:33;4397:53;;;4446:1;4443;4436:12;4397:53;4469:29;4488:9;4469:29;:::i;:::-;4459:39;;4517:38;4551:2;4540:9;4536:18;4517:38;:::i;:::-;4507:48;;4602:2;4591:9;4587:18;4574:32;4564:42;;4657:2;4646:9;4642:18;4629:32;4684:18;4676:6;4673:30;4670:50;;;4716:1;4713;4706:12;4670:50;4739:22;;4792:4;4784:13;;4780:27;-1:-1:-1;4770:55:17;;4821:1;4818;4811:12;4770:55;4844:73;4909:7;4904:2;4891:16;4886:2;4882;4878:11;4844:73;:::i;:::-;4834:83;;;4257:666;;;;;;;:::o;4928:450::-;4997:6;5050:2;5038:9;5029:7;5025:23;5021:32;5018:52;;;5066:1;5063;5056:12;5018:52;5106:9;5093:23;5139:18;5131:6;5128:30;5125:50;;;5171:1;5168;5161:12;5125:50;5194:22;;5247:4;5239:13;;5235:27;-1:-1:-1;5225:55:17;;5276:1;5273;5266:12;5225:55;5299:73;5364:7;5359:2;5346:16;5341:2;5337;5333:11;5299:73;:::i;5383:260::-;5451:6;5459;5512:2;5500:9;5491:7;5487:23;5483:32;5480:52;;;5528:1;5525;5518:12;5480:52;5551:29;5570:9;5551:29;:::i;:::-;5541:39;;5599:38;5633:2;5622:9;5618:18;5599:38;:::i;:::-;5589:48;;5383:260;;;;;:::o;5648:380::-;5727:1;5723:12;;;;5770;;;5791:61;;5845:4;5837:6;5833:17;5823:27;;5791:61;5898:2;5890:6;5887:14;5867:18;5864:38;5861:161;;5944:10;5939:3;5935:20;5932:1;5925:31;5979:4;5976:1;5969:15;6007:4;6004:1;5997:15;5861:161;;5648:380;;;:::o;7892:496::-;8071:3;8109:6;8103:13;8125:66;8184:6;8179:3;8172:4;8164:6;8160:17;8125:66;:::i;:::-;8254:13;;8213:16;;;;8276:70;8254:13;8213:16;8323:4;8311:17;;8276:70;:::i;:::-;8362:20;;7892:496;-1:-1:-1;;;;7892:496:17:o;8393:232::-;8432:3;8453:17;;;8450:140;;8512:10;8507:3;8503:20;8500:1;8493:31;8547:4;8544:1;8537:15;8575:4;8572:1;8565:15;8450:140;-1:-1:-1;8617:1:17;8606:13;;8393:232::o;8630:489::-;-1:-1:-1;;;;;8899:15:17;;;8881:34;;8951:15;;8946:2;8931:18;;8924:43;8998:2;8983:18;;8976:34;;;9046:3;9041:2;9026:18;;9019:31;;;8824:4;;9067:46;;9093:19;;9085:6;9067:46;:::i;:::-;9059:54;8630:489;-1:-1:-1;;;;;;8630:489:17:o;9124:249::-;9193:6;9246:2;9234:9;9225:7;9221:23;9217:32;9214:52;;;9262:1;9259;9252:12;9214:52;9294:9;9288:16;9313:30;9337:5;9313:30;:::i;9504:545::-;9606:2;9601:3;9598:11;9595:448;;;9642:1;9667:5;9663:2;9656:17;9712:4;9708:2;9698:19;9782:2;9770:10;9766:19;9763:1;9759:27;9753:4;9749:38;9818:4;9806:10;9803:20;9800:47;;;-1:-1:-1;9841:4:17;9800:47;9896:2;9891:3;9887:12;9884:1;9880:20;9874:4;9870:31;9860:41;;9951:82;9969:2;9962:5;9959:13;9951:82;;;10014:17;;;9995:1;9984:13;9951:82;;;9955:3;;;9504:545;;;:::o;10225:1352::-;10351:3;10345:10;10378:18;10370:6;10367:30;10364:56;;;10400:18;;:::i;:::-;10429:97;10519:6;10479:38;10511:4;10505:11;10479:38;:::i;:::-;10473:4;10429:97;:::i;:::-;10581:4;;10645:2;10634:14;;10662:1;10657:663;;;;11364:1;11381:6;11378:89;;;-1:-1:-1;11433:19:17;;;11427:26;11378:89;-1:-1:-1;;10182:1:17;10178:11;;;10174:24;10170:29;10160:40;10206:1;10202:11;;;10157:57;11480:81;;10627:944;;10657:663;9451:1;9444:14;;;9488:4;9475:18;;-1:-1:-1;;10693:20:17;;;10811:236;10825:7;10822:1;10819:14;10811:236;;;10914:19;;;10908:26;10893:42;;11006:27;;;;10974:1;10962:14;;;;10841:19;;10811:236;;;10815:3;11075:6;11066:7;11063:19;11060:201;;;11136:19;;;11130:26;-1:-1:-1;;11219:1:17;11215:14;;;11231:3;11211:24;11207:37;11203:42;11188:58;11173:74;;11060:201;-1:-1:-1;;;;;11307:1:17;11291:14;;;11287:22;11274:36;;-1:-1:-1;10225:1352:17:o",
    "sourcePath": "c:/Users/mertt/OneDrive/Masaüstü/Projects/NFT Marketplace/contracts/NFTMarketplace.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.20+commit.a1b79de6"
    },
    "ast": {
        "absolutePath": "c:/Users/mertt/OneDrive/Masaüstü/Projects/NFT Marketplace/contracts/NFTMarketplace.sol",
        "exportedSymbols": {
            "Context": [
                1794
            ],
            "ERC165": [
                2073
            ],
            "ERC721": [
                1475
            ],
            "ERC721URIStorage": [
                1736
            ],
            "IERC165": [
                2085
            ],
            "IERC4906": [
                325
            ],
            "IERC721": [
                1592
            ],
            "IERC721Errors": [
                419
            ],
            "IERC721Metadata": [
                1764
            ],
            "IERC721Receiver": [
                1610
            ],
            "NFTMarketplace": [
                149
            ],
            "Ownable": [
                297
            ],
            "Strings": [
                2049
            ]
        },
        "id": 150,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:24:0"
            },
            {
                "absolutePath": "c:/Users/mertt/OneDrive/Masaüstü/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "file": "../node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 150,
                "sourceUnit": 1476,
                "src": "61:73:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/mertt/OneDrive/Masaüstü/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
                "file": "../node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 150,
                "sourceUnit": 1737,
                "src": "136:94:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/mertt/OneDrive/Masaüstü/Projects/NFT Marketplace/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "id": 4,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 150,
                "sourceUnit": 298,
                "src": "232:68:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 5,
                            "name": "ERC721URIStorage",
                            "nameLocations": [
                                "331:16:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1736,
                            "src": "331:16:0"
                        },
                        "id": 6,
                        "nodeType": "InheritanceSpecifier",
                        "src": "331:16:0"
                    },
                    {
                        "arguments": [
                            {
                                "expression": {
                                    "id": 8,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "357:3:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                    }
                                },
                                "id": 9,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "361:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "357:10:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            }
                        ],
                        "baseName": {
                            "id": 7,
                            "name": "Ownable",
                            "nameLocations": [
                                "349:7:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 297,
                            "src": "349:7:0"
                        },
                        "id": 10,
                        "nodeType": "InheritanceSpecifier",
                        "src": "349:19:0"
                    }
                ],
                "canonicalName": "NFTMarketplace",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 149,
                "linearizedBaseContracts": [
                    149,
                    297,
                    1736,
                    1475,
                    419,
                    1764,
                    325,
                    1592,
                    2073,
                    2085,
                    1794
                ],
                "name": "NFTMarketplace",
                "nameLocation": "313:14:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "d082e381",
                        "id": 12,
                        "mutability": "mutable",
                        "name": "tokenCounter",
                        "nameLocation": "391:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "376:27:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 11,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "376:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "e5afe3e6",
                        "id": 16,
                        "mutability": "mutable",
                        "name": "tokenPrices",
                        "nameLocation": "445:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "410:46:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                        },
                        "typeName": {
                            "id": 15,
                            "keyName": "",
                            "keyNameLocation": "-1:-1:-1",
                            "keyType": {
                                "id": 13,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "418:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "410:27:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                            },
                            "valueName": "",
                            "valueNameLocation": "-1:-1:-1",
                            "valueType": {
                                "id": 14,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "429:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                }
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "87b37468",
                        "id": 20,
                        "mutability": "mutable",
                        "name": "tokensForSale",
                        "nameLocation": "495:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "463:45:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                            "typeString": "mapping(uint256 => bool)"
                        },
                        "typeName": {
                            "id": 19,
                            "keyName": "",
                            "keyNameLocation": "-1:-1:-1",
                            "keyType": {
                                "id": 17,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "471:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "463:24:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                            },
                            "valueName": "",
                            "valueNameLocation": "-1:-1:-1",
                            "valueType": {
                                "id": 18,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "482:4:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                }
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 31,
                            "nodeType": "Block",
                            "src": "564:35:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 29,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 27,
                                            "name": "tokenCounter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 12,
                                            "src": "575:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "30",
                                            "id": 28,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "590:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "575:16:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 30,
                                    "nodeType": "ExpressionStatement",
                                    "src": "575:16:0"
                                }
                            ]
                        },
                        "id": 32,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "4e46544d61726b6574706c616365",
                                        "id": 23,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "538:16:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_a5c11b0609ca47cbb791b8469512e86848cad6852ae2ccb4271cb85f88dc18f0",
                                            "typeString": "literal_string \"NFTMarketplace\""
                                        },
                                        "value": "NFTMarketplace"
                                    },
                                    {
                                        "hexValue": "4e46544d",
                                        "id": 24,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "556:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_ab9fcc761af1d82303292883039902f161b4a7d75964388dc4b8c9370bdca7c3",
                                            "typeString": "literal_string \"NFTM\""
                                        },
                                        "value": "NFTM"
                                    }
                                ],
                                "id": 25,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 22,
                                    "name": "ERC721",
                                    "nameLocations": [
                                        "531:6:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1475,
                                    "src": "531:6:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "531:32:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 21,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "528:2:0"
                        },
                        "returnParameters": {
                            "id": 26,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "564:0:0"
                        },
                        "scope": 149,
                        "src": "517:82:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 59,
                            "nodeType": "Block",
                            "src": "673:194:0",
                            "statements": [
                                {
                                    "assignments": [
                                        40
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 40,
                                            "mutability": "mutable",
                                            "name": "newTokenId",
                                            "nameLocation": "692:10:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 59,
                                            "src": "684:18:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 39,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "684:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 42,
                                    "initialValue": {
                                        "id": 41,
                                        "name": "tokenCounter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12,
                                        "src": "705:12:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "684:33:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 44,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "738:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 45,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "742:6:0",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "738:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 46,
                                                "name": "newTokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 40,
                                                "src": "750:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 43,
                                            "name": "_safeMint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                1097,
                                                1123
                                            ],
                                            "referencedDeclaration": 1097,
                                            "src": "728:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 47,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "728:33:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 48,
                                    "nodeType": "ExpressionStatement",
                                    "src": "728:33:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 50,
                                                "name": "newTokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 40,
                                                "src": "785:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "id": 51,
                                                "name": "tokenURI",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 34,
                                                "src": "797:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            ],
                                            "id": 49,
                                            "name": "_setTokenURI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1735,
                                            "src": "772:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (uint256,string memory)"
                                            }
                                        },
                                        "id": 52,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "772:34:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 53,
                                    "nodeType": "ExpressionStatement",
                                    "src": "772:34:0"
                                },
                                {
                                    "expression": {
                                        "id": 55,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": false,
                                        "src": "817:14:0",
                                        "subExpression": {
                                            "id": 54,
                                            "name": "tokenCounter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 12,
                                            "src": "817:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 56,
                                    "nodeType": "ExpressionStatement",
                                    "src": "817:14:0"
                                },
                                {
                                    "expression": {
                                        "id": 57,
                                        "name": "newTokenId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 40,
                                        "src": "849:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 38,
                                    "id": 58,
                                    "nodeType": "Return",
                                    "src": "842:17:0"
                                }
                            ]
                        },
                        "functionSelector": "da2ed03e",
                        "id": 60,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "createNFT",
                        "nameLocation": "616:9:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 35,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 34,
                                    "mutability": "mutable",
                                    "name": "tokenURI",
                                    "nameLocation": "640:8:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 60,
                                    "src": "626:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 33,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "626:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "625:24:0"
                        },
                        "returnParameters": {
                            "id": 38,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 37,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 60,
                                    "src": "665:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 36,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "665:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "664:9:0"
                        },
                        "scope": 149,
                        "src": "607:260:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 96,
                            "nodeType": "Block",
                            "src": "930:235:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 73,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [
                                                        {
                                                            "id": 69,
                                                            "name": "tokenId",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 62,
                                                            "src": "957:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 68,
                                                        "name": "ownerOf",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 608,
                                                        "src": "949:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                                            "typeString": "function (uint256) view returns (address)"
                                                        }
                                                    },
                                                    "id": 70,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "949:16:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 71,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "969:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 72,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "973:6:0",
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "969:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "949:30:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "596f7520617265206e6f74206f776e6572206f662074686973204e46542e",
                                                "id": 74,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "981:32:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_17aaa1ca26f597b590ea8665f3b6ce5613e8b2830c5365388807493007a45a51",
                                                    "typeString": "literal_string \"You are not owner of this NFT.\""
                                                },
                                                "value": "You are not owner of this NFT."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_17aaa1ca26f597b590ea8665f3b6ce5613e8b2830c5365388807493007a45a51",
                                                    "typeString": "literal_string \"You are not owner of this NFT.\""
                                                }
                                            ],
                                            "id": 67,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "941:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 75,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "941:73:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 76,
                                    "nodeType": "ExpressionStatement",
                                    "src": "941:73:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 80,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 78,
                                                    "name": "price",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 64,
                                                    "src": "1033:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 79,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1041:1:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "1033:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
                                                "id": 81,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1044:33:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
                                                    "typeString": "literal_string \"Price must be greater than zero\""
                                                },
                                                "value": "Price must be greater than zero"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
                                                    "typeString": "literal_string \"Price must be greater than zero\""
                                                }
                                            ],
                                            "id": 77,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1025:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 82,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1025:53:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 83,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1025:53:0"
                                },
                                {
                                    "expression": {
                                        "id": 88,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 84,
                                                "name": "tokenPrices",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 16,
                                                "src": "1089:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                                    "typeString": "mapping(uint256 => uint256)"
                                                }
                                            },
                                            "id": 86,
                                            "indexExpression": {
                                                "id": 85,
                                                "name": "tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 62,
                                                "src": "1101:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "1089:20:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 87,
                                            "name": "price",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 64,
                                            "src": "1112:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "1089:28:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 89,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1089:28:0"
                                },
                                {
                                    "expression": {
                                        "id": 94,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 90,
                                                "name": "tokensForSale",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 20,
                                                "src": "1128:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                                    "typeString": "mapping(uint256 => bool)"
                                                }
                                            },
                                            "id": 92,
                                            "indexExpression": {
                                                "id": 91,
                                                "name": "tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 62,
                                                "src": "1142:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "1128:22:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "74727565",
                                            "id": 93,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1153:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "value": "true"
                                        },
                                        "src": "1128:29:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 95,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1128:29:0"
                                }
                            ]
                        },
                        "functionSelector": "94383f14",
                        "id": 97,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "listNFT",
                        "nameLocation": "884:7:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 65,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 62,
                                    "mutability": "mutable",
                                    "name": "tokenId",
                                    "nameLocation": "900:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 97,
                                    "src": "892:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 61,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "892:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 64,
                                    "mutability": "mutable",
                                    "name": "price",
                                    "nameLocation": "917:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 97,
                                    "src": "909:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 63,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "909:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "891:32:0"
                        },
                        "returnParameters": {
                            "id": 66,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "930:0:0"
                        },
                        "scope": 149,
                        "src": "875:290:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 147,
                            "nodeType": "Block",
                            "src": "1220:357:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "baseExpression": {
                                                    "id": 103,
                                                    "name": "tokensForSale",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 20,
                                                    "src": "1239:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                                        "typeString": "mapping(uint256 => bool)"
                                                    }
                                                },
                                                "id": 105,
                                                "indexExpression": {
                                                    "id": 104,
                                                    "name": "tokenId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 99,
                                                    "src": "1253:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "1239:22:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "54686973204e4654206973206e6f7420666f722073616c652e",
                                                "id": 106,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1263:27:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2",
                                                    "typeString": "literal_string \"This NFT is not for sale.\""
                                                },
                                                "value": "This NFT is not for sale."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_795e888268ddf9337f106a3868637d7c62055ce14f5dda1abe76d3564d875fc2",
                                                    "typeString": "literal_string \"This NFT is not for sale.\""
                                                }
                                            ],
                                            "id": 102,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1231:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 107,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1231:60:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 108,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1231:60:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 115,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 110,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "1310:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 111,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "1314:5:0",
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1310:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "baseExpression": {
                                                        "id": 112,
                                                        "name": "tokenPrices",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 16,
                                                        "src": "1323:11:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                                            "typeString": "mapping(uint256 => uint256)"
                                                        }
                                                    },
                                                    "id": 114,
                                                    "indexExpression": {
                                                        "id": 113,
                                                        "name": "tokenId",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 99,
                                                        "src": "1335:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "1323:20:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "1310:33:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4e6f7420656e6f75676820657468657220746f2070757263686173652074686973204e4654",
                                                "id": 116,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1345:39:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_8b317e81ea5cf546ccd1aefbae583850edd46fca54f882ef08861b50ec9c08da",
                                                    "typeString": "literal_string \"Not enough ether to purchase this NFT\""
                                                },
                                                "value": "Not enough ether to purchase this NFT"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_8b317e81ea5cf546ccd1aefbae583850edd46fca54f882ef08861b50ec9c08da",
                                                    "typeString": "literal_string \"Not enough ether to purchase this NFT\""
                                                }
                                            ],
                                            "id": 109,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1302:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 117,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1302:83:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 118,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1302:83:0"
                                },
                                {
                                    "assignments": [
                                        120
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 120,
                                            "mutability": "mutable",
                                            "name": "seller",
                                            "nameLocation": "1404:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 147,
                                            "src": "1396:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 119,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1396:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 124,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 122,
                                                "name": "tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 99,
                                                "src": "1421:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 121,
                                            "name": "ownerOf",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 608,
                                            "src": "1413:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                                "typeString": "function (uint256) view returns (address)"
                                            }
                                        },
                                        "id": 123,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1413:16:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1396:33:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 126,
                                                "name": "seller",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 120,
                                                "src": "1450:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 127,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "1458:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 128,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1462:6:0",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "1458:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 129,
                                                "name": "tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 99,
                                                "src": "1470:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 125,
                                            "name": "_transfer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1216,
                                            "src": "1440:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 130,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1440:38:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 131,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1440:38:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 137,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "1516:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 138,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1520:5:0",
                                                "memberName": "value",
                                                "nodeType": "MemberAccess",
                                                "src": "1516:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 134,
                                                        "name": "seller",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 120,
                                                        "src": "1499:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 133,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1491:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 132,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1491:8:0",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 135,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1491:15:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 136,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1507:8:0",
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "src": "1491:24:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 139,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1491:35:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 140,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1491:35:0"
                                },
                                {
                                    "expression": {
                                        "id": 145,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 141,
                                                "name": "tokensForSale",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 20,
                                                "src": "1539:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                                    "typeString": "mapping(uint256 => bool)"
                                                }
                                            },
                                            "id": 143,
                                            "indexExpression": {
                                                "id": 142,
                                                "name": "tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 99,
                                                "src": "1553:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "1539:22:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "66616c7365",
                                            "id": 144,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1564:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "value": "false"
                                        },
                                        "src": "1539:30:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 146,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1539:30:0"
                                }
                            ]
                        },
                        "functionSelector": "51ed8288",
                        "id": 148,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "buyNFT",
                        "nameLocation": "1182:6:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 100,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 99,
                                    "mutability": "mutable",
                                    "name": "tokenId",
                                    "nameLocation": "1197:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 148,
                                    "src": "1189:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 98,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1189:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1188:17:0"
                        },
                        "returnParameters": {
                            "id": 101,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1220:0:0"
                        },
                        "scope": 149,
                        "src": "1173:404:0",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 150,
                "src": "304:1276:0",
                "usedErrors": [
                    163,
                    168,
                    377,
                    382,
                    391,
                    396,
                    401,
                    408,
                    413,
                    418
                ],
                "usedEvents": [
                    174,
                    317,
                    324,
                    1491,
                    1500,
                    1509
                ]
            }
        ],
        "src": "33:1547:0"
    },
    "functionHashes": {
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "buyNFT(uint256)": "51ed8288",
        "createNFT(string)": "da2ed03e",
        "getApproved(uint256)": "081812fc",
        "isApprovedForAll(address,address)": "e985e9c5",
        "listNFT(uint256,uint256)": "94383f14",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "ownerOf(uint256)": "6352211e",
        "renounceOwnership()": "715018a6",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "tokenCounter()": "d082e381",
        "tokenPrices(uint256)": "e5afe3e6",
        "tokenURI(uint256)": "c87b56dd",
        "tokensForSale(uint256)": "87b37468",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1228800",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "approve(address,uint256)": "31531",
            "balanceOf(address)": "2674",
            "buyNFT(uint256)": "infinite",
            "createNFT(string)": "infinite",
            "getApproved(uint256)": "infinite",
            "isApprovedForAll(address,address)": "infinite",
            "listNFT(uint256,uint256)": "infinite",
            "name()": "infinite",
            "owner()": "2353",
            "ownerOf(uint256)": "infinite",
            "renounceOwnership()": "infinite",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "26745",
            "supportsInterface(bytes4)": "infinite",
            "symbol()": "infinite",
            "tokenCounter()": "2338",
            "tokenPrices(uint256)": "2523",
            "tokenURI(uint256)": "infinite",
            "tokensForSale(uint256)": "2569",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "28465"
        }
    }
}